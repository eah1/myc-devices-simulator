// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	user "myc-devices-simulator/business/repository/store/user"
)

// StoreUser is an autogenerated mock type for the StoreUser type
type StoreUser struct {
	mock.Mock
}

// InsertUser provides a mock function with given fields: ctx, _a1
func (_m *StoreUser) InsertUser(ctx context.Context, _a1 user.User) error {
	ret := _m.Called(ctx, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, user.User) error); ok {
		r0 = rf(ctx, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewStoreUser interface {
	mock.TestingT
	Cleanup(func())
}

// NewStoreUser creates a new instance of StoreUser. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewStoreUser(t mockConstructorTestingTNewStoreUser) *StoreUser {
	mock := &StoreUser{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
